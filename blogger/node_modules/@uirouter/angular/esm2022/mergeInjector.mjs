/**
 * Merge two injectors
 *
 * This class implements the Injector ng2 interface but delegates
 * to the Injectors provided in the constructor.
 */
export class MergeInjector {
    static NOT_FOUND = {};
    injectors;
    constructor(...injectors) {
        if (injectors.length < 2)
            throw new Error('pass at least two injectors');
        this.injectors = injectors;
    }
    /**
     * Get the token from the first injector which contains it.
     *
     * Delegates to the first Injector.get().
     * If not found, then delegates to the second Injector (and so forth).
     * If no Injector contains the token, return the `notFoundValue`, or throw.
     *
     * @param token the DI token
     * @param notFoundValue the value to return if none of the Injectors contains the token.
     * @returns {any} the DI value
     */
    get(token, notFoundValue) {
        for (let i = 0; i < this.injectors.length; i++) {
            const val = this.injectors[i].get(token, MergeInjector.NOT_FOUND);
            if (val !== MergeInjector.NOT_FOUND)
                return val;
        }
        if (arguments.length >= 2)
            return notFoundValue;
        // This will throw the DI Injector error
        this.injectors[0].get(token);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVyZ2VJbmplY3Rvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tZXJnZUluamVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOzs7OztHQUtHO0FBQ0gsTUFBTSxPQUFPLGFBQWE7SUFDeEIsTUFBTSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDZCxTQUFTLENBQWE7SUFDOUIsWUFBWSxHQUFHLFNBQXFCO1FBQ2xDLElBQUksU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO1FBQ3pFLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQzdCLENBQUM7SUFFRDs7Ozs7Ozs7OztPQVVHO0lBQ0gsR0FBRyxDQUFDLEtBQVUsRUFBRSxhQUFtQjtRQUNqQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNsRSxJQUFJLEdBQUcsS0FBSyxhQUFhLENBQUMsU0FBUztnQkFBRSxPQUFPLEdBQUcsQ0FBQztTQUNqRDtRQUVELElBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxDQUFDO1lBQUUsT0FBTyxhQUFhLENBQUM7UUFFaEQsd0NBQXdDO1FBQ3hDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIE1lcmdlIHR3byBpbmplY3RvcnNcbiAqXG4gKiBUaGlzIGNsYXNzIGltcGxlbWVudHMgdGhlIEluamVjdG9yIG5nMiBpbnRlcmZhY2UgYnV0IGRlbGVnYXRlc1xuICogdG8gdGhlIEluamVjdG9ycyBwcm92aWRlZCBpbiB0aGUgY29uc3RydWN0b3IuXG4gKi9cbmV4cG9ydCBjbGFzcyBNZXJnZUluamVjdG9yIGltcGxlbWVudHMgSW5qZWN0b3Ige1xuICBzdGF0aWMgTk9UX0ZPVU5EID0ge307XG4gIHByaXZhdGUgaW5qZWN0b3JzOiBJbmplY3RvcltdO1xuICBjb25zdHJ1Y3RvciguLi5pbmplY3RvcnM6IEluamVjdG9yW10pIHtcbiAgICBpZiAoaW5qZWN0b3JzLmxlbmd0aCA8IDIpIHRocm93IG5ldyBFcnJvcigncGFzcyBhdCBsZWFzdCB0d28gaW5qZWN0b3JzJyk7XG4gICAgdGhpcy5pbmplY3RvcnMgPSBpbmplY3RvcnM7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSB0b2tlbiBmcm9tIHRoZSBmaXJzdCBpbmplY3RvciB3aGljaCBjb250YWlucyBpdC5cbiAgICpcbiAgICogRGVsZWdhdGVzIHRvIHRoZSBmaXJzdCBJbmplY3Rvci5nZXQoKS5cbiAgICogSWYgbm90IGZvdW5kLCB0aGVuIGRlbGVnYXRlcyB0byB0aGUgc2Vjb25kIEluamVjdG9yIChhbmQgc28gZm9ydGgpLlxuICAgKiBJZiBubyBJbmplY3RvciBjb250YWlucyB0aGUgdG9rZW4sIHJldHVybiB0aGUgYG5vdEZvdW5kVmFsdWVgLCBvciB0aHJvdy5cbiAgICpcbiAgICogQHBhcmFtIHRva2VuIHRoZSBESSB0b2tlblxuICAgKiBAcGFyYW0gbm90Rm91bmRWYWx1ZSB0aGUgdmFsdWUgdG8gcmV0dXJuIGlmIG5vbmUgb2YgdGhlIEluamVjdG9ycyBjb250YWlucyB0aGUgdG9rZW4uXG4gICAqIEByZXR1cm5zIHthbnl9IHRoZSBESSB2YWx1ZVxuICAgKi9cbiAgZ2V0KHRva2VuOiBhbnksIG5vdEZvdW5kVmFsdWU/OiBhbnkpOiBhbnkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5pbmplY3RvcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHZhbCA9IHRoaXMuaW5qZWN0b3JzW2ldLmdldCh0b2tlbiwgTWVyZ2VJbmplY3Rvci5OT1RfRk9VTkQpO1xuICAgICAgaWYgKHZhbCAhPT0gTWVyZ2VJbmplY3Rvci5OT1RfRk9VTkQpIHJldHVybiB2YWw7XG4gICAgfVxuXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPj0gMikgcmV0dXJuIG5vdEZvdW5kVmFsdWU7XG5cbiAgICAvLyBUaGlzIHdpbGwgdGhyb3cgdGhlIERJIEluamVjdG9yIGVycm9yXG4gICAgdGhpcy5pbmplY3RvcnNbMF0uZ2V0KHRva2VuKTtcbiAgfVxufVxuIl19