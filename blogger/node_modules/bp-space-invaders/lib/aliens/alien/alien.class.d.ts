import { IAsset } from '../../interface/asset.interface';
import { GameService } from '../../service/game.service';
import { AssetClass } from '../../asset/asset.class';
import { TimerModel } from '../../model/timer.model';
import { BoundarySetupModel } from '../../model/boundary-set.model';
export declare abstract class AlienClass extends AssetClass {
    private assetPoints;
    protected bombTimer: TimerModel;
    canFireWeapon: boolean;
    protected isAlienAsset: boolean;
    constructor(gameService: GameService, ctx: CanvasRenderingContext2D, boundarySetup: BoundarySetupModel, guid: number, assetPoints: number);
    protected spawn(): void;
    protected draw(): void;
    private drawAlien;
    isHit(missileAsset: IAsset): void;
    creep(asset: IAsset): boolean;
    private randomizeDropBomb;
    private drawAlienDestruction;
    protected destructionAnimate(now?: number): void;
    animate(now?: number): void;
    get points(): number;
    isAlien(): boolean;
}
