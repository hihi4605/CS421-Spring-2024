import { Component, ElementRef, ViewChild } from '@angular/core';
import { GameService } from '../../service/game.service';
import { NumberClass } from '../number.class';
import { GameCookieService } from '../../service/game-cookie.service';
import * as i0 from "@angular/core";
import * as i1 from "../../service/game.service";
import * as i2 from "../../service/game-cookie.service";
import * as i3 from "@angular/common";
export class NumberComponent {
    constructor(gameService, gameCookieService) {
        this.gameService = gameService;
        this.gameCookieService = gameCookieService;
        this.assets = [
            {
                key: 'zero',
                name: '0'
            },
            {
                key: 'one',
                name: '1'
            },
            {
                key: 'two',
                name: '2'
            },
            {
                key: 'three',
                name: '3'
            },
            {
                key: 'four',
                name: '4'
            },
            {
                key: 'five',
                name: '5'
            },
            {
                key: 'six',
                name: '6'
            },
            {
                key: 'seven',
                name: '7'
            },
            {
                key: 'eight',
                name: '8'
            },
            {
                key: 'nine',
                name: '9'
            }
        ];
    }
    ngOnInit() {
        const rows = 20;
        const columns = 20;
        this.ctx = this.gameService.initBoard(this.canvas, rows, columns, 25);
        this.addNumber({
            x: 0,
            y: 0,
            height: rows,
            width: columns
        });
        this.isAnimateOnce = true;
        this.toggleAssets(this.gameCookieService.getSecondaryDebugData());
        this.animate();
    }
    addNumber(boundary) {
        const number = new NumberClass(this.gameService, this.ctx, boundary, 1);
        number.setNumber(0, false);
        number.isDestroyed = true;
        number.isAnimateOnce = true;
        this.number = number;
    }
    animateAsset() {
        this.number.isDestroyed = false;
        cancelAnimationFrame(this.requestId);
        this.animate();
    }
    draw() {
        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
        this.gameService.addOutlines(this.ctx, 5, 0.025);
    }
    animate() {
        this.draw();
        this.number.animate();
        if (!this.isAnimateOnce) {
            this.requestId = requestAnimationFrame(this.animate.bind(this));
        }
    }
    toggleAssets(key) {
        this.draw();
        this.assets.map((asset, $index) => {
            if (key === asset.key) {
                this.number.setNumber($index, false);
                this.gameCookieService.setDebugData({
                    secondaryAssetName: key
                });
            }
        });
        this.animateAsset();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: NumberComponent, deps: [{ token: i1.GameService }, { token: i2.GameCookieService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.7", type: NumberComponent, selector: "bp-number", viewQueries: [{ propertyName: "canvas", first: true, predicate: ["board"], descendants: true, static: true }], ngImport: i0, template: "<div class=\"game-container\">\n  <div class=\"asset-title\">Numbers</div>\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"animateAsset()\" class=\"animation-button button\">Animate</button>\n    <div *ngFor=\"let asset of assets\">\n      <button (click)=\"toggleAssets(asset.key)\" class=\"animation-button button\">\n        {{ asset.name }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [".game-container .asset-title{margin:25px;width:100%;text-align:center}.game-container .game-board-container{display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{border:solid 2px grey;background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-wrap:wrap;flex-direction:row;justify-content:space-evenly}.game-container .button-container .animation-button{background-color:#4caf50}.game-container .button-container .button{flex-wrap:wrap;font-size:16px;margin-top:10px;padding:15px 30px;cursor:pointer;width:165px;border:1px solid black}\n"], dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: NumberComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bp-number', template: "<div class=\"game-container\">\n  <div class=\"asset-title\">Numbers</div>\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"animateAsset()\" class=\"animation-button button\">Animate</button>\n    <div *ngFor=\"let asset of assets\">\n      <button (click)=\"toggleAssets(asset.key)\" class=\"animation-button button\">\n        {{ asset.name }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [".game-container .asset-title{margin:25px;width:100%;text-align:center}.game-container .game-board-container{display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{border:solid 2px grey;background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-wrap:wrap;flex-direction:row;justify-content:space-evenly}.game-container .button-container .animation-button{background-color:#4caf50}.game-container .button-container .button{flex-wrap:wrap;font-size:16px;margin-top:10px;padding:15px 30px;cursor:pointer;width:165px;border:1px solid black}\n"] }]
        }], ctorParameters: () => [{ type: i1.GameService }, { type: i2.GameCookieService }], propDecorators: { canvas: [{
                type: ViewChild,
                args: ['board', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,