import { Component, ElementRef, ViewChild } from '@angular/core';
import { BLOCK_SIZE, COLS, ROWS } from '../missile-constants';
import { GameService } from '../../../service/game.service';
import { AssetAlignEnum } from '../../../asset/enum/asset-align.enum';
import { AssetAlignVerticalEnum } from '../../../asset/enum/asset-align-vertical.enum';
import { Missile1Class } from '../../missile-1/missile-1.class';
import * as i0 from "@angular/core";
import * as i1 from "../../../service/game.service";
export class MissileComponent {
    constructor(gameService) {
        this.gameService = gameService;
    }
    ngOnInit() {
        this.ctx = this.gameService.initBoard(this.canvas, COLS, ROWS, BLOCK_SIZE);
        const boundary = {
            x: 0,
            y: 0,
            height: ROWS,
            width: COLS
        };
        this.missile = new Missile1Class(this.gameService, this.ctx, boundary, 0);
        this.missile.move(this.missile.positionAsset(AssetAlignEnum.center, AssetAlignVerticalEnum.bottom));
        this.isAnimateOnce = true;
        this.animate();
    }
    animateAsset() {
        this.isAnimateOnce = !this.isAnimateOnce;
        this.missile.isDestroyed = false;
        this.missile.move(this.missile.positionAsset(AssetAlignEnum.center, AssetAlignVerticalEnum.middle));
        cancelAnimationFrame(this.requestId);
        this.animate();
    }
    draw() {
        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
        this.gameService.addOutlines(this.ctx, 1, 0.025);
    }
    animate(now = 0) {
        this.draw();
        this.missile.animate(now);
        if (!this.isAnimateOnce) {
            this.requestId = requestAnimationFrame(this.animate.bind(this));
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: MissileComponent, deps: [{ token: i1.GameService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.7", type: MissileComponent, selector: "bp-missile", viewQueries: [{ propertyName: "canvas", first: true, predicate: ["board"], descendants: true, static: true }], ngImport: i0, template: "<div class=\"game-container\">\n  Missile\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"animateAsset()\" class=\"animation-button button\">Animate</button>\n  </div>\n</div>\n", styles: [".game-container .header{display:grid;grid-template-columns:200px auto 200px;height:25px}.game-container .header .game-title{text-align:center;border:1px solid black}.game-container .game-board-container{display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{border:solid 2px grey;background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-direction:row;justify-content:center}.game-container .button-container .animation-button{background-color:#4caf50}.game-container .button-container .button{font-size:16px;padding:15px 30px;cursor:pointer;width:165px;border:1px solid black}\n"] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: MissileComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bp-missile', template: "<div class=\"game-container\">\n  Missile\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"animateAsset()\" class=\"animation-button button\">Animate</button>\n  </div>\n</div>\n", styles: [".game-container .header{display:grid;grid-template-columns:200px auto 200px;height:25px}.game-container .header .game-title{text-align:center;border:1px solid black}.game-container .game-board-container{display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{border:solid 2px grey;background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-direction:row;justify-content:center}.game-container .button-container .animation-button{background-color:#4caf50}.game-container .button-container .button{font-size:16px;padding:15px 30px;cursor:pointer;width:165px;border:1px solid black}\n"] }]
        }], ctorParameters: () => [{ type: i1.GameService }], propDecorators: { canvas: [{
                type: ViewChild,
                args: ['board', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlzc2lsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zcGFjZS1pbnZhZGVycy9zcmMvbGliL21pc3NpbGUvbWlzc2lsZS90ZXN0LWNvbXBvbmVudC9taXNzaWxlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NwYWNlLWludmFkZXJzL3NyYy9saWIvbWlzc2lsZS9taXNzaWxlL3Rlc3QtY29tcG9uZW50L21pc3NpbGUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpFLE9BQU8sRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDdkYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlDQUFpQyxDQUFDOzs7QUFXaEUsTUFBTSxPQUFPLGdCQUFnQjtJQStCM0IsWUFBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7SUFBRyxDQUFDO0lBS2hELFFBQVE7UUFDTixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztRQUMzRSxNQUFNLFFBQVEsR0FBRztZQUNmLENBQUMsRUFBRSxDQUFDO1lBQ0osQ0FBQyxFQUFFLENBQUM7WUFDSixNQUFNLEVBQUUsSUFBSTtZQUNaLEtBQUssRUFBRSxJQUFJO1NBQ1UsQ0FBQztRQUN4QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ3BHLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBS0QsWUFBWTtRQUNWLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ3pDLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUNqQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLHNCQUFzQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDcEcsb0JBQW9CLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBS08sSUFBSTtRQUNWLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hFLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFNTSxPQUFPLENBQUMsR0FBRyxHQUFHLENBQUM7UUFDcEIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ1osSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQXlCLENBQUMsQ0FBQztTQUN6RjtJQUNILENBQUM7OEdBL0VVLGdCQUFnQjtrR0FBaEIsZ0JBQWdCLGlLQ2pCN0IsbVNBU0E7OzJGRFFhLGdCQUFnQjtrQkFMNUIsU0FBUzsrQkFDRSxZQUFZO2dGQVN0QixNQUFNO3NCQURMLFNBQVM7dUJBQUMsT0FBTyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBFbGVtZW50UmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQkxPQ0tfU0laRSwgQ09MUywgUk9XUyB9IGZyb20gJy4uL21pc3NpbGUtY29uc3RhbnRzJztcbmltcG9ydCB7IEdhbWVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZS9nYW1lLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXNzZXRBbGlnbkVudW0gfSBmcm9tICcuLi8uLi8uLi9hc3NldC9lbnVtL2Fzc2V0LWFsaWduLmVudW0nO1xuaW1wb3J0IHsgQXNzZXRBbGlnblZlcnRpY2FsRW51bSB9IGZyb20gJy4uLy4uLy4uL2Fzc2V0L2VudW0vYXNzZXQtYWxpZ24tdmVydGljYWwuZW51bSc7XG5pbXBvcnQgeyBNaXNzaWxlMUNsYXNzIH0gZnJvbSAnLi4vLi4vbWlzc2lsZS0xL21pc3NpbGUtMS5jbGFzcyc7XG5pbXBvcnQgeyBCb3VuZGFyeVNldHVwTW9kZWwgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9ib3VuZGFyeS1zZXQubW9kZWwnO1xuXG4vKipcbiAqIFRoZSBNaXNzaWxlIENvbXBvbmVudFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdicC1taXNzaWxlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21pc3NpbGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9taXNzaWxlLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTWlzc2lsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBUaGUgY2FudmFzXG4gICAqL1xuICBAVmlld0NoaWxkKCdib2FyZCcsIHsgc3RhdGljOiB0cnVlIH0pXG4gIGNhbnZhczogRWxlbWVudFJlZjxIVE1MQ2FudmFzRWxlbWVudD47XG5cbiAgLyoqXG4gICAqIENUU1xuICAgKi9cbiAgcHJpdmF0ZSBjdHg6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcblxuICAvKipcbiAgICogcmVxdWVzdCBJZFxuICAgKi9cbiAgcHJpdmF0ZSByZXF1ZXN0SWQ6IG51bWJlcjtcblxuICAvKipcbiAgICogcmVxdWVzdFxuICAgKi9cbiAgcHJpdmF0ZSBpc0FuaW1hdGVPbmNlOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUaGUgbWlzc2lsZVxuICAgKi9cbiAgcHJpdmF0ZSBtaXNzaWxlOiBNaXNzaWxlMUNsYXNzO1xuXG4gIC8qKlxuICAgKiBUaGUgQ29uc3RydWN0b3JcbiAgICogQHBhcmFtIGdhbWVTZXJ2aWNlIFRoZSBHYW1lU2VydmljZSBmcm9tIERJXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGdhbWVTZXJ2aWNlOiBHYW1lU2VydmljZSkge31cblxuICAvKipcbiAgICogT24gSW5pdFxuICAgKi9cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5jdHggPSB0aGlzLmdhbWVTZXJ2aWNlLmluaXRCb2FyZCh0aGlzLmNhbnZhcywgQ09MUywgUk9XUywgQkxPQ0tfU0laRSk7XG4gICAgY29uc3QgYm91bmRhcnkgPSB7XG4gICAgICB4OiAwLFxuICAgICAgeTogMCxcbiAgICAgIGhlaWdodDogUk9XUyxcbiAgICAgIHdpZHRoOiBDT0xTXG4gICAgfSBhcyBCb3VuZGFyeVNldHVwTW9kZWw7XG4gICAgdGhpcy5taXNzaWxlID0gbmV3IE1pc3NpbGUxQ2xhc3ModGhpcy5nYW1lU2VydmljZSwgdGhpcy5jdHgsIGJvdW5kYXJ5LCAwKTtcbiAgICB0aGlzLm1pc3NpbGUubW92ZSh0aGlzLm1pc3NpbGUucG9zaXRpb25Bc3NldChBc3NldEFsaWduRW51bS5jZW50ZXIsIEFzc2V0QWxpZ25WZXJ0aWNhbEVudW0uYm90dG9tKSk7XG4gICAgdGhpcy5pc0FuaW1hdGVPbmNlID0gdHJ1ZTtcbiAgICB0aGlzLmFuaW1hdGUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBbmltYXRlIHRoZSBvYmplY3Qgb25jZVxuICAgKi9cbiAgYW5pbWF0ZUFzc2V0KCk6IHZvaWQge1xuICAgIHRoaXMuaXNBbmltYXRlT25jZSA9ICF0aGlzLmlzQW5pbWF0ZU9uY2U7XG4gICAgdGhpcy5taXNzaWxlLmlzRGVzdHJveWVkID0gZmFsc2U7XG4gICAgdGhpcy5taXNzaWxlLm1vdmUodGhpcy5taXNzaWxlLnBvc2l0aW9uQXNzZXQoQXNzZXRBbGlnbkVudW0uY2VudGVyLCBBc3NldEFsaWduVmVydGljYWxFbnVtLm1pZGRsZSkpO1xuICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMucmVxdWVzdElkKTtcbiAgICB0aGlzLmFuaW1hdGUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEcmF3IHRoZSBib2FyZFxuICAgKi9cbiAgcHJpdmF0ZSBkcmF3KCkge1xuICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLCAwLCB0aGlzLmN0eC5jYW52YXMud2lkdGgsIHRoaXMuY3R4LmNhbnZhcy5oZWlnaHQpO1xuICAgIHRoaXMuZ2FtZVNlcnZpY2UuYWRkT3V0bGluZXModGhpcy5jdHgsIDEsIDAuMDI1KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBbmltYXRlXG4gICAqIEBwYXJhbSBub3cgdGhlIGN1cnJlbnQgdGltZVxuICAgKi9cbiAgcHVibGljIGFuaW1hdGUobm93ID0gMCk6IHZvaWQge1xuICAgIHRoaXMuZHJhdygpO1xuICAgIHRoaXMubWlzc2lsZS5hbmltYXRlKG5vdyk7XG4gICAgaWYgKCF0aGlzLmlzQW5pbWF0ZU9uY2UpIHtcbiAgICAgIHRoaXMucmVxdWVzdElkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0ZS5iaW5kKHRoaXMpIGFzIEZyYW1lUmVxdWVzdENhbGxiYWNrKTtcbiAgICB9XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJnYW1lLWNvbnRhaW5lclwiPlxuICBNaXNzaWxlXG4gIDxkaXYgY2xhc3M9XCJnYW1lLWJvYXJkLWNvbnRhaW5lclwiPlxuICAgIDxjYW52YXMgI2JvYXJkIGNsYXNzPVwiZ2FtZS1ib2FyZFwiPjwvY2FudmFzPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImJ1dHRvbi1jb250YWluZXJcIj5cbiAgICA8YnV0dG9uIChjbGljayk9XCJhbmltYXRlQXNzZXQoKVwiIGNsYXNzPVwiYW5pbWF0aW9uLWJ1dHRvbiBidXR0b25cIj5BbmltYXRlPC9idXR0b24+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=