import { Component, ElementRef, ViewChild } from '@angular/core';
import { GameService } from '../../../service/game.service';
import { AssetAlignVerticalEnum } from '../../../asset/enum/asset-align-vertical.enum';
import { AssetAlignEnum } from '../../../asset/enum/asset-align.enum';
import { Alien1Class } from '../../alien-1/alien-1.class';
import { Alien2Class } from '../../alien-2/alien-2.class';
import { Alien3Class } from '../../alien-3/alien-3.class';
import { Alien4Class } from '../../alien-4/alien-4.class';
import { Alien5Class } from '../../alien-5/alien-5.class';
import { Alien6Class } from '../../alien-6/alien-6.class';
import { GameCookieService } from '../../../service/game-cookie.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../service/game.service";
import * as i2 from "../../../service/game-cookie.service";
import * as i3 from "@angular/common";
export class AlienComponent {
    constructor(gameService, gameCookieService) {
        this.gameService = gameService;
        this.gameCookieService = gameCookieService;
        this.isAnimateOnce = true;
        this.assets = [
            {
                key: 'alien1',
                name: 'A-1'
            },
            {
                key: 'alien2',
                name: 'A-2'
            },
            {
                key: 'alien3',
                name: 'A-3'
            },
            {
                key: 'alien4',
                name: 'A-4'
            },
            {
                key: 'alien5',
                name: 'A-5'
            },
            {
                key: 'alien6',
                name: 'A-6'
            }
        ];
    }
    ngOnInit() {
        const rows = 20;
        const columns = 20;
        this.ctx = this.gameService.initBoard(this.canvas, rows, columns, 25);
        this.addAliens({
            x: 0,
            y: 0,
            height: rows,
            width: columns
        });
        this.toggleAssets(this.gameCookieService.getSecondaryDebugData());
        this.animate();
    }
    addAliens(boundary) {
        this.aliens = [];
        const alien1 = new Alien1Class(this.gameService, this.ctx, boundary, 1);
        alien1.move(alien1.positionAsset(AssetAlignEnum.center, AssetAlignVerticalEnum.middle));
        alien1.isDestroyed = true;
        this.aliens.push(alien1);
        const alien2 = new Alien2Class(this.gameService, this.ctx, boundary, 1);
        alien2.isDestroyed = true;
        alien2.move(alien2.positionAsset(AssetAlignEnum.center, AssetAlignVerticalEnum.middle));
        this.aliens.push(alien2);
        const alien3 = new Alien3Class(this.gameService, this.ctx, boundary, 1);
        alien3.isDestroyed = true;
        alien3.move(alien3.positionAsset(AssetAlignEnum.center, AssetAlignVerticalEnum.middle));
        this.aliens.push(alien3);
        const alien4 = new Alien4Class(this.gameService, this.ctx, boundary, 1);
        alien4.isDestroyed = true;
        alien4.move(alien4.positionAsset(AssetAlignEnum.center, AssetAlignVerticalEnum.middle));
        this.aliens.push(alien4);
        const alien5 = new Alien5Class(this.gameService, this.ctx, boundary, 1);
        alien5.isDestroyed = true;
        alien5.move(alien5.positionAsset(AssetAlignEnum.center, AssetAlignVerticalEnum.middle));
        this.aliens.push(alien5);
        const alien6 = new Alien6Class(this.gameService, this.ctx, boundary, 1);
        alien6.isDestroyed = true;
        alien6.move(alien6.positionAsset(AssetAlignEnum.center, AssetAlignVerticalEnum.middle));
        this.aliens.push(alien6);
        this.alien = this.aliens[0];
        this.alien.isDestroyed = false;
    }
    animateAsset() {
        this.isAnimateOnce = !this.isAnimateOnce;
        this.alien.isDestroyed = false;
        this.alien.move(this.alien.positionAsset(AssetAlignEnum.center, AssetAlignVerticalEnum.middle));
        cancelAnimationFrame(this.requestId);
        this.animate();
    }
    draw() {
        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
        this.gameService.addOutlines(this.ctx, 5, 0.025);
    }
    animate(now = 0) {
        this.draw();
        this.alien.animate(now);
        if (!this.isAnimateOnce) {
            this.requestId = requestAnimationFrame(this.animate.bind(this));
        }
    }
    toggleAssets(key) {
        this.alien.isDestroyed = true;
        this.draw();
        let index = 0;
        this.aliens.map((alien) => {
            alien.isDestroyed = true;
        });
        this.assets.map((asset, $index) => {
            if (key === asset.key) {
                index = $index;
                this.gameCookieService.setDebugData({
                    secondaryAssetName: key
                });
            }
        });
        this.alien = this.aliens[index];
        this.animateAsset();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: AlienComponent, deps: [{ token: i1.GameService }, { token: i2.GameCookieService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.7", type: AlienComponent, selector: "bp-alien", viewQueries: [{ propertyName: "canvas", first: true, predicate: ["board"], descendants: true, static: true }], ngImport: i0, template: "<div class=\"game-container\">\n  <div class=\"asset-title\">Alien</div>\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"animateAsset()\" class=\"animation-button button\">Animate</button>\n    <div *ngFor=\"let asset of assets\">\n      <button (click)=\"toggleAssets(asset.key)\" class=\"animation-button button\">\n        {{ asset.name }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [".game-container .asset-title{margin:25px;width:100%;text-align:center}.game-container .game-board-container{display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{border:solid 2px grey;background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-wrap:wrap;flex-direction:row;justify-content:space-evenly}.game-container .button-container .animation-button{background-color:#4caf50}.game-container .button-container .button{flex-wrap:wrap;font-size:16px;margin-top:10px;padding:15px 30px;cursor:pointer;width:165px;border:1px solid black}\n"], dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: AlienComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bp-alien', template: "<div class=\"game-container\">\n  <div class=\"asset-title\">Alien</div>\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"animateAsset()\" class=\"animation-button button\">Animate</button>\n    <div *ngFor=\"let asset of assets\">\n      <button (click)=\"toggleAssets(asset.key)\" class=\"animation-button button\">\n        {{ asset.name }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [".game-container .asset-title{margin:25px;width:100%;text-align:center}.game-container .game-board-container{display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{border:solid 2px grey;background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-wrap:wrap;flex-direction:row;justify-content:space-evenly}.game-container .button-container .animation-button{background-color:#4caf50}.game-container .button-container .button{flex-wrap:wrap;font-size:16px;margin-top:10px;padding:15px 30px;cursor:pointer;width:165px;border:1px solid black}\n"] }]
        }], ctorParameters: () => [{ type: i1.GameService }, { type: i2.GameCookieService }], propDecorators: { canvas: [{
                type: ViewChild,
                args: ['board', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,