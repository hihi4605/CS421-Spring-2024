import { Component, ElementRef, ViewChild, HostListener } from '@angular/core';
import { Spaceship1Class } from '../../spaceship-1/spaceship-1.class';
import { GameService } from '../../../service/game.service';
import { ObservableTypeEnum } from '../../../enum/observable-type.enum';
import { Spaceship2Class } from '../../spaceship-2/spaceship-2.class';
import { GameCookieService } from '../../../service/game-cookie.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../service/game.service";
import * as i2 from "../../../service/game-cookie.service";
import * as i3 from "@angular/common";
export class SpaceshipComponent {
    constructor(gameService, gameCookieService) {
        this.gameService = gameService;
        this.gameCookieService = gameCookieService;
        this.isAnimateOnce = false;
        this.assets = [
            {
                key: 'spaceship1',
                name: 'S-1'
            },
            {
                key: 'spaceship2',
                name: 'S-2'
            }
        ];
    }
    ngOnInit() {
        const rows = 20;
        const columns = 20;
        this.ctx = this.gameService.initBoard(this.canvas, columns, rows, 25);
        this.addSpaceships({
            x: 0,
            y: 0,
            height: rows,
            width: columns
        });
        this.isAnimateOnce = true;
        this.toggleAssets(this.gameCookieService.getSecondaryDebugData());
        this.animate();
    }
    addSpaceships(boundary) {
        this.spaceships = [];
        const spaceship1 = new Spaceship1Class(this.gameService, this.ctx, boundary);
        spaceship1.isDestroyed = true;
        this.spaceships.push(spaceship1);
        const spaceship2 = new Spaceship2Class(this.gameService, this.ctx, boundary, true);
        spaceship2.isDestroyed = true;
        this.spaceships.push(spaceship2);
        this.spaceship = this.spaceships[0];
        this.spaceship.isAnimateOnce = true;
        this.spaceship.isDestroyed = false;
    }
    animateAsset() {
        this.isAnimateOnce = !this.isAnimateOnce;
        this.spaceship.isDestroyed = false;
        cancelAnimationFrame(this.requestId);
        this.animate();
    }
    draw() {
        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
        this.gameService.addOutlines(this.ctx, 1, 0.1);
    }
    animate(now = 0) {
        this.draw();
        this.spaceship.animate(now);
        if (!this.isAnimateOnce) {
            this.requestId = requestAnimationFrame(this.animate.bind(this));
        }
    }
    keyDownEvent(event) {
        event.preventDefault();
        this.gameService.emitMasterObservableEvent({
            type: ObservableTypeEnum.keyDownEvent,
            stringData: event.code
        });
    }
    keyUpEvent(event) {
        event.preventDefault();
        this.gameService.emitMasterObservableEvent({
            type: ObservableTypeEnum.keyUpEvent,
            stringData: event.code
        });
    }
    toggleAssets(key) {
        this.spaceship.isDestroyed = true;
        this.draw();
        let index = 0;
        this.spaceships.map((spaceship) => {
            spaceship.isDestroyed = true;
        });
        this.assets.map((asset, $index) => {
            if (key === asset.key) {
                index = $index;
                this.gameCookieService.setDebugData({
                    secondaryAssetName: key
                });
            }
        });
        this.spaceship = this.spaceships[index];
        this.animateAsset();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: SpaceshipComponent, deps: [{ token: i1.GameService }, { token: i2.GameCookieService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.7", type: SpaceshipComponent, selector: "bp-spaceship", host: { listeners: { "window:keydown": "keyDownEvent($event)", "window:keyup": "keyUpEvent($event)" } }, viewQueries: [{ propertyName: "canvas", first: true, predicate: ["board"], descendants: true, static: true }], ngImport: i0, template: "<div class=\"game-container\">\n  <div class=\"asset-title\">Spaceship</div>\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"animateAsset()\" class=\"animation-button button\">Animate</button>\n    <div *ngFor=\"let asset of assets\">\n      <button (click)=\"toggleAssets(asset.key)\" class=\"animation-button button\">\n        {{ asset.name }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [".game-container .asset-title{margin:25px;width:100%;text-align:center}.game-container .game-board-container{display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{border:solid 2px grey;background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-direction:row;justify-content:space-evenly}.game-container .button-container .animation-button{background-color:#4caf50}.game-container .button-container .button{font-size:16px;padding:15px 30px;cursor:pointer;width:165px;border:1px solid black}\n"], dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: SpaceshipComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bp-spaceship', template: "<div class=\"game-container\">\n  <div class=\"asset-title\">Spaceship</div>\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"animateAsset()\" class=\"animation-button button\">Animate</button>\n    <div *ngFor=\"let asset of assets\">\n      <button (click)=\"toggleAssets(asset.key)\" class=\"animation-button button\">\n        {{ asset.name }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [".game-container .asset-title{margin:25px;width:100%;text-align:center}.game-container .game-board-container{display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{border:solid 2px grey;background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-direction:row;justify-content:space-evenly}.game-container .button-container .animation-button{background-color:#4caf50}.game-container .button-container .button{font-size:16px;padding:15px 30px;cursor:pointer;width:165px;border:1px solid black}\n"] }]
        }], ctorParameters: () => [{ type: i1.GameService }, { type: i2.GameCookieService }], propDecorators: { canvas: [{
                type: ViewChild,
                args: ['board', { static: true }]
            }], keyDownEvent: [{
                type: HostListener,
                args: ['window:keydown', ['$event']]
            }], keyUpEvent: [{
                type: HostListener,
                args: ['window:keyup', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,