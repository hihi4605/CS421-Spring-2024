import { Component, ViewChild, ElementRef, HostListener } from '@angular/core';
import { COLS, BLOCK_SIZE, ROWS, LEVELSPEED, LEVELHEIGHT, MOON_HEIGHT } from './gameboard-constants';
import { GameService } from '../service/game.service';
import { ObservableTypeEnum } from '../enum/observable-type.enum';
import { TextService } from '../service/text.service';
import { GameCookieService } from '../service/game-cookie.service';
import { InvasionService } from '../service/invasion.service';
import { MoonService } from '../service/moon.service';
import { MoonDefenseService } from '../service/moon-defense.service';
import { SpaceshipService } from '../service/spaceship.service';
import { ProjectileService } from '../service/projectile.service';
import * as i0 from "@angular/core";
import * as i1 from "../service/game-cookie.service";
import * as i2 from "../service/game.service";
import * as i3 from "@angular/common";
export class GameboardComponent {
    constructor(gameCookieService, gameService) {
        this.gameCookieService = gameCookieService;
        this.gameService = gameService;
        this.isDisplayGrid = false;
        const gameData = this.gameCookieService.getGameData();
        this.highScore = gameData.highScore;
    }
    ngOnInit() {
        this.gameStarted = false;
        this.ctx = this.gameService.initBoard(this.canvas, COLS, ROWS, BLOCK_SIZE);
        this.moonService = new MoonService(this.ctx, {
            x: 0,
            y: ROWS - MOON_HEIGHT * 2,
            height: MOON_HEIGHT,
            width: COLS
        });
        this.spaceshipService = new SpaceshipService(this.gameService, this.ctx, {
            x: this.moonService.getMoonLeftBoundary(),
            y: 0,
            height: this.moonService.getMoonTop(),
            width: this.moonService.getMoonRightBoundary()
        });
        const boundary = {
            x: 0,
            y: 0,
            height: this.moonService.getMoonTop(),
            width: COLS
        };
        this.moonDefenseService = new MoonDefenseService(this.gameService, this.ctx, boundary);
        this.projectileService = new ProjectileService(this.gameService, this.ctx, boundary);
        this.textService = new TextService(this.gameService, this.ctx, {
            x: 0,
            y: 0,
            height: LEVELHEIGHT[0],
            width: COLS
        });
        this.invasionService = new InvasionService(this.gameService, this.ctx, {
            x: 0,
            y: 0,
            height: this.moonService.getMoonTop(),
            width: COLS
        });
        this.gameService.getMasterObservable().subscribe((resultModel) => {
            if (resultModel.type === ObservableTypeEnum.alienBossDestroyed) {
                this.calculateScore(resultModel.pointData);
            }
            else if (resultModel.type === ObservableTypeEnum.alienDestroyed) {
                this.calculateScore(resultModel.pointData);
                if (this.invasionService.aliensDestroyed()) {
                    setTimeout(() => {
                        this.nextLevel();
                    }, 1000);
                }
            }
            else if (resultModel.type === ObservableTypeEnum.spaceshipDestroyed) {
                this.gameOver(false);
            }
        });
        this.resetGame();
        this.startAllAnimation();
    }
    calculateScore(score) {
        this.points += score;
        if (this.points > this.highScore) {
            this.highScore = this.points;
            this.textService.setHighScore(this.highScore);
        }
        this.textService.setScore(this.points);
    }
    setGameBoard(isReset) {
        this.invasionService.setupInvasion(LEVELHEIGHT[this.creepLevel]);
        this.spaceshipService.setupSpaceships();
        this.moonDefenseService.setupMoonBase(isReset, this.spaceshipService.getSpaceshipYPosition());
    }
    splat() {
        if (this.invasionService.splat()) {
            this.gameOver(true);
        }
    }
    evaluateDamage() {
        this.projectileService.getActiveBombs().map((bomb) => {
            this.spaceshipService.isHit(bomb);
            this.moonDefenseService.getActiveMoonBases().map((moonDefense) => {
                moonDefense.isHitBomb(bomb);
            });
        });
        this.projectileService.getActiveMissiles().map((missile) => {
            this.invasionService.getAllActiveAliens().map((alien) => {
                alien.isHit(missile);
            });
            this.moonDefenseService.getActiveMoonBases().map((moonDefense) => {
                moonDefense.isHitMissile(missile);
            });
        });
        if (this.invasionService.increaseInvasionSpeed(this.creepSpeed)) {
            this.creepSpeedLevel = LEVELSPEED[this.creepSpeed++];
        }
    }
    startAllAnimation() {
        this.draw();
        this.invasionService.animate(0, 1);
        this.moonDefenseService.animate();
        this.spaceshipService.animate();
        this.textService.animate();
    }
    animate(now = 0) {
        this.evaluateDamage();
        this.splat();
        if (this.isGameOver || this.isGamePaused) {
            return;
        }
        this.draw();
        this.invasionService.animate(now, this.creepSpeedLevel);
        this.moonDefenseService.animate();
        this.projectileService.animate(now);
        this.spaceshipService.animate(now);
        this.textService.animate();
        this.requestId = requestAnimationFrame(this.animate.bind(this));
    }
    lifeLost() {
        this.pauseGame('READY ?', 17);
        setTimeout(() => {
            this.removeWeapons();
            this.pauseGame('', 0);
        }, 2000);
    }
    gameOver(isReset = false) {
        this.lives += isReset ? 3 : 1;
        if (this.points >= this.highScore) {
            this.gameCookieService.setGameData({
                highScore: this.highScore
            });
        }
        if (this.lives < 3) {
            this.lifeLost();
        }
        else {
            this.removeWeapons();
            setTimeout(() => {
                this.isGameOver = true;
                this.gameStarted = false;
                this.gameService.emitMasterObservableEvent({
                    type: ObservableTypeEnum.gameStarted,
                    booleanData: false
                });
                cancelAnimationFrame(this.requestId);
                this.gameService.emitMasterObservableEvent({
                    type: ObservableTypeEnum.gameOver,
                    booleanData: true
                });
                this.textService.displayText('GAME OVER', 'red', 5);
            }, 250);
        }
    }
    draw() {
        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
        if (this.isDisplayGrid) {
            this.gameService.addOutlines(this.ctx, 20, 0.2);
        }
        this.moonService.animate();
    }
    handleEventListeners(type, code) {
        if (this.gameStarted && !this.isGamePaused) {
            this.gameService.emitMasterObservableEvent({
                type,
                stringData: code
            });
        }
    }
    keyDownEvent(event) {
        event.preventDefault();
        this.handleEventListeners(ObservableTypeEnum.keyDownEvent, event.code);
    }
    keyUpEvent(event) {
        event.preventDefault();
        this.handleEventListeners(ObservableTypeEnum.keyUpEvent, event.code);
    }
    play() {
        this.gameStarted = true;
        this.gameService.emitMasterObservableEvent({
            type: ObservableTypeEnum.gameStarted,
            booleanData: true
        });
        this.gameService.emitMasterObservableEvent({
            type: ObservableTypeEnum.gameOver,
            booleanData: false
        });
        this.resetGame();
        if (this.requestId) {
            cancelAnimationFrame(this.requestId);
        }
        this.animate();
    }
    newLevelSetup(isReset = false) {
        if (this.creepLevel < 8) {
            this.creepLevel++;
        }
        this.creepSpeed = 0;
        this.creepSpeedLevel = LEVELSPEED[this.creepSpeed++];
        this.invasionService.resetAlienCreep();
        this.setGameBoard(isReset);
        if (this.creepLevel > 4) {
            this.gameService.emitMasterObservableEvent({
                type: ObservableTypeEnum.alienDrop,
                numberData: ROWS * BLOCK_SIZE
            });
        }
    }
    removeWeapons() {
        this.projectileService.removeProjectiles();
    }
    nextLevel() {
        this.gameLevel++;
        this.pauseGame('LEVEL UP', 12);
        setTimeout(() => {
            this.removeWeapons();
            this.newLevelSetup();
            this.pauseGame('', 0);
        }, 2000);
    }
    resetGame() {
        this.lives = 0;
        this.creepLevel = -1;
        this.points = 0;
        this.gameLevel = 1;
        this.textService.setScore(this.points);
        this.textService.setHighScore(this.highScore);
        this.isGameOver = false;
        this.isGamePaused = false;
        this.spaceshipService.setupSpaceships();
        this.newLevelSetup(true);
    }
    pauseGame(text, textOffset) {
        if (this.gameStarted) {
            this.isGamePaused = !this.isGamePaused;
            if (this.isGamePaused) {
                cancelAnimationFrame(this.requestId);
                this.textService.displayText(text, 'white', textOffset);
                this.gameService.emitMasterObservableEvent({
                    type: ObservableTypeEnum.gamePaused,
                    booleanData: true
                });
            }
            else {
                this.gameService.emitMasterObservableEvent({
                    type: ObservableTypeEnum.gamePaused,
                    booleanData: false
                });
                this.animate();
            }
        }
    }
    pause() {
        this.pauseGame('PAUSED', 20);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: GameboardComponent, deps: [{ token: i1.GameCookieService }, { token: i2.GameService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.7", type: GameboardComponent, selector: "bp-gameboard", host: { listeners: { "window:keydown": "keyDownEvent($event)", "window:keyup": "keyUpEvent($event)" } }, viewQueries: [{ propertyName: "canvas", first: true, predicate: ["board"], descendants: true, static: true }], ngImport: i0, template: "<div class=\"game-container\">\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"play()\" class=\"play-button button\" *ngIf=\"!gameStarted\">Play</button>\n    <button (click)=\"gameOver(true)\" class=\"reset-button button\" *ngIf=\"gameStarted\">Reset</button>\n    <button (click)=\"pause()\" class=\"pause-button button\" [class.button-disabled]=\"!gameStarted\">Pause</button>\n  </div>\n</div>\n", styles: [".game-container{background-color:#000;padding:10px}.game-container .game-board-container{position:relative;margin:auto;display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-direction:row;justify-content:center}.game-container .button-container .play-button{background-color:#4caf50}.game-container .button-container .reset-button{background-color:red}.game-container .button-container .pause-button{margin-left:25px;background-color:#4caf50}.game-container .button-container .pause-button.button-disabled{background-color:#ccc}.game-container .button-container .button{font-size:16px;font-family:\"Press Start 2P\";padding:15px 30px;cursor:pointer;width:140px;border:1px solid black}\n", "@font-face{font-family:\"Press Start 2P\";src:local(\"Press Start 2P Regular\"),local(\"PressStart2P-Regular\"),url(data:application/font-woff2;charset=utf-8;base64,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) format(\"woff2\");font-weight:400;font-style:normal}\n"], dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.7", ngImport: i0, type: GameboardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bp-gameboard', template: "<div class=\"game-container\">\n  <div class=\"game-board-container\">\n    <canvas #board class=\"game-board\"></canvas>\n  </div>\n  <div class=\"button-container\">\n    <button (click)=\"play()\" class=\"play-button button\" *ngIf=\"!gameStarted\">Play</button>\n    <button (click)=\"gameOver(true)\" class=\"reset-button button\" *ngIf=\"gameStarted\">Reset</button>\n    <button (click)=\"pause()\" class=\"pause-button button\" [class.button-disabled]=\"!gameStarted\">Pause</button>\n  </div>\n</div>\n", styles: [".game-container{background-color:#000;padding:10px}.game-container .game-board-container{position:relative;margin:auto;display:flex;flex-direction:row;justify-content:center}.game-container .game-board-container .game-board{background-color:#000}.game-container .button-container{position:relative;margin-top:25px;display:flex;flex-direction:row;justify-content:center}.game-container .button-container .play-button{background-color:#4caf50}.game-container .button-container .reset-button{background-color:red}.game-container .button-container .pause-button{margin-left:25px;background-color:#4caf50}.game-container .button-container .pause-button.button-disabled{background-color:#ccc}.game-container .button-container .button{font-size:16px;font-family:\"Press Start 2P\";padding:15px 30px;cursor:pointer;width:140px;border:1px solid black}\n", "@font-face{font-family:\"Press Start 2P\";src:local(\"Press Start 2P Regular\"),local(\"PressStart2P-Regular\"),url(data:application/font-woff2;charset=utf-8;base64,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) format(\"woff2\");font-weight:400;font-style:normal}\n"] }]
        }], ctorParameters: () => [{ type: i1.GameCookieService }, { type: i2.GameService }], propDecorators: { canvas: [{
                type: ViewChild,
                args: ['board', { static: true }]
            }], keyDownEvent: [{
                type: HostListener,
                args: ['window:keydown', ['$event']]
            }], keyUpEvent: [{
                type: HostListener,
                args: ['window:keyup', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,